return {
	"folke/which-key.nvim",
	event = "VeryLazy", -- 在 VeryLazy 事件触发时加载插件
	init = function()
		-- 设置 Vim 选项
		vim.o.timeout = true -- 启用 timeout
		vim.o.timeoutlen = 500 -- 设置 timeout 时间为 500 毫秒
	end,
	opts = {
		-- 这里放你的配置
		-- 如果不配置，将使用默认设置
		-- 参考下面的配置部分
	},
	config = function()
		local wk = require("which-key")

		wk.register({
			["<leader>"] = {

				-- systemctl
				n = { "清除搜索高亮" },

				t = {
					name = "标签页",
					o = { "<cmd>tabnew<CR>", "打开新标签页" },
					c = { "<cmd>tabclose<CR>", "关闭当前标签页" },
					n = { "<cmd>tabn<CR>", "切换到下一个标签页" },
					p = { "<cmd>tabp<CR>", "切换到上一个标签页" },
					f = { "<cmd>tabnew %<CR>", "在新标签页中打开当前缓冲区" },
				},

				s = {
					name = "窗口管理",
					v = { "<C-w>v", "纵向分割窗口" },
					h = { "<C-w>s", "横向分割窗口" },
					e = { "<C-w>=", "使分割窗口尺寸相等" },
					x = { "<cmd>close<CR>", "关闭当前分割窗口" },
					m = { "<cmd>MaximizerToggle<CR>", "最大化/最小化分割窗口" }, -- vim-maximizer.lua
				},

				["+"] = { "<C-a>", "增加数字" },
				["-"] = { "<C-x>", "减少数字" },

				-- nvim-tree.lua
				e = {
					name = "文件浏览器",
					e = { "<cmd>NvimTreeToggle<cr>", "打开或关闭文件浏览器" },
					f = { "<cmd>NvimTreeFindFileToggle<cr>", "打开文件浏览器，并聚焦到文件浏览器上" },
					c = { "<cmd>NvimTreeCollapse<cr>", "折叠文件浏览器" },
					r = { "<cmd>NvimTreeRefresh<cr>", "刷新文件浏览器" },
				},

				-- telescope.lua
				f = {
					name = "查找",
					f = { "<cmd>Telescope find_files<cr>", "在当前目录模糊查找文件" },
					r = { "<cmd>Telescope oldfiles<cr>", "在最近文件中模糊查找文件" },
					s = { "<cmd>Telescope live_grep<cr>", "在当前目录查找字符串" },
					c = { "<cmd>Telescope grep_string<cr>", "在当前目录查找光标下的字符串" },
				},

				-- harpoon.lua
				h = {
					name = "导航",
					m = { "<cmd>lua require('harpoon.mark').add_file()<cr>", " 标记文件" },
					n = { "<cmd>lua require('harpoon.ui').nav_next()<cr>", "跳转到下一个标记" },
					p = { "<cmd>lua require('harpoon.ui').nav_prev()<cr>", "跳转到上一个标记" },
				},

				l = {
					name = "语言",
					-- java-config.lua
					j = { "<cmd>split term://javac %:r.java && java %:r<CR>:startinsert<CR>", "快捷运行Java文件" },
					-- rust-config.lua
					r = { "快捷运行Rust文件" },
					-- markdown-preview.lua and nvim-markdown.lua
					m = {
						name = "markdown",
						r = { "<cmd>MarkdownPreview<CR>", "markdown预览" },
						s = { "<cmd>MarkdownPreviewStop<CR>", "停止markdown预览" },
						t = { "<cmd>MarkdownPreviewToggle<CR>", "切换markdown预览" },
					},
					-- nvim-dap.lua
					d = {
						name = "调试",
						t = { "<cmd>DapToggleBreakpoint<CR>", "Toggle DAP breakpoint" },
						x = { "<cmd>DapTerminate<CR>", "Terminate DAP session" },
						o = { "<cmd>DapStepOver<CR>", "DAP step over" },
					},
				},

				-- formatting.lua(defined in lua)
				m = {
					name = "格式化",
					p = { "格式化当前缓冲区" },
					l = { "使用lint" },
				},

				-- auto-session.lua and linting.lua
				w = {
					name = "会话",
					r = { "<cmd>SessionRestore<CR>", "为当前目录恢复上次工作区会话" },
					s = { "<cmd>SessionSave<CR>", "为自动会话根目录保存工作区会话" },
				},
			},

			-- c system
			c = {
				["$"] = { "从光标到行尾" },
				["%"] = { "从光标到前面的匹配括号" },
				["0"] = { "从光标到行首" },
				["^"] = { "从光标到行首字母" },
				["{"] = { "从上一行到上一空行" },
				["}"] = { "从当前行到下一空行" },
				b = { "前一个词(光标前)" },
				e = { "后一个词(含有光标)" },
				-- F = { "(不推荐)" },
				-- f = { "(不推荐)" },
				G = { "从当前行到最后一行" },
				h = { "向左n个字(光标前)" },
				j = { "向下n行到当前行" },
				k = { "向上n行到当前行" },
				l = { "向右n个字(含光标)" },
				-- s = { "(不推荐)入" },
				-- t = { "(不推荐)" },
				-- T = { "(不推荐)" },
				w = { "下一个词" },
				["["] = { "从当前行到上一个{" },
				["]"] = { "从当前行到下一个}" },
				a = { "环绕" },
			},
			-- d system
			d = {
				["$"] = { "从光标到行尾" },
				["%"] = { "从光标到前面的匹配括号" },
				["0"] = { "从光标到行首" },
				["^"] = { "从光标到行首字母" },
				["{"] = { "从上一行到上一空行" },
				["}"] = { "从当前行到下一空行" },
				b = { "前一个词(光标前)" },
				e = { "后一个词(含有光标)" },
				-- F = { "(不推荐)" },
				-- f = { "(不推荐)" },
				G = { "从当前行到最后一行" },
				h = { "向左n个字(光标前)" },
				j = { "向下n行到当前行" },
				k = { "向上n行到当前行" },
				l = { "向右n个字(含光标)" },
				-- s = { "(不推荐)入" },
				-- t = { "(不推荐)" },
				-- T = { "(不推荐)" },
				w = { "下一个词" },
				["["] = { "从当前行到上一个{" },
				["]"] = { "从当前行到下一个}" },
				a = { "环绕" },
			},
			-- g system
			g = {
				["%"] = { "从光标到前面的匹配括号" },
				e = { "移到上一个词尾" },
				f = { "打开光标下的文件" },
				g = { "移到第一行" },
				i = { "回到上次插入模式的位置并进入插入模式" },
				N = { "下一个匹配项并进入选择模式(先查找)" },
				n = { "上一个匹配项并进入选择模式(先查找)" },
				r = { "替换当前行变为当前剪切板内容" },
				T = { "上一个标签页" },
				t = { "下一个标签页" },
				v = { "选择上一次选中内容并进入选择模式" },
				x = { "打开光标下的 URL 或者文件" },
				["~"] = { "切换大小写" },
				U = { "切换大写" },
				u = { "切换小写" },
			},
      -- y system
			y = {
				["$"] = { "从光标到行尾" },
				["%"] = { "从光标到前面的匹配括号" },
				["0"] = { "从光标到行首" },
				["^"] = { "从光标到行首字母" },
				["{"] = { "从上一行到上一空行" },
				["}"] = { "从当前行到下一空行" },
				b = { "前一个词(光标前)" },
				e = { "后一个词(含有光标)" },
				-- F = { "(不推荐)" },
				-- f = { "(不推荐)" },
				G = { "从当前行到最后一行" },
				h = { "向左n个字(光标前)" },
				j = { "向下n行到当前行" },
				k = { "向上n行到当前行" },
				l = { "向右n个字(含光标)" },
				S = { "选中当前行，上下同时输入" },
				s = { "选中当前行，左右同时输入" },
				-- t = { "(不推荐)" },
				-- T = { "(不推荐)" },
				w = { "下一个词" },
				["["] = { "从当前行到上一个{" },
				["]"] = { "从当前行到下一个}" },
				a = { "环绕" },
			},
      -- z system
      z = {
        ["<CR>"] = { "当前行转到窗口顶(第一个非空列)" },
        a = { "折叠或展开当前折叠(强)" },
        A = { "折叠或展开当前折叠及其所有嵌套的折叠" },
        b = { "当前行转到窗口底" },
        C = { "折叠当前折叠及其所有嵌套的折叠" },
        c = { "折叠当前折叠" },
        e = { "当前列转到窗口右" },
        g = { "标记当前行作为拼写建议的好单词" },
        H = { "窗口左半部分移到窗口左" },
        i = { "折叠或展开当前折叠(弱)" },
        L = { "窗口左半部分移到窗口右" },
        m = { "折叠更多的折叠" },
        M = { "折叠所有折叠" },
        o = { "展开当前折叠" },
        O = { "展开当前折叠" },
        r = { "打开更少折叠" },
        R = { "打开所有折叠" },
        s = { "当前列转到窗口左" },
        t = { "当前行转到窗口顶" },
        -- v = { "" },
        w = { "标记当前行作为拼写建议的坏单词" },
        x = { "取消最后一次的折叠操作" },
        z = { "当前行转到窗口中间" },
        f = { "创建n行折叠" },
      },
		}, { mode = "n" })

		-- comment.lua
		wk.register({
			g = {
				c = {
					name = "注释(行)",
					c = { "注释当前行" },
					["$"] = { "注释到行尾" },
					["%"] = { "注释到匹配括号" },
					[","] = { "在光标前插入注释" },
					["0"] = { "从行首注释注释到光标前" },
					["^"] = { "从首字母注释注释到光标前" },
					["{"] = { "注释上面所有行" },
					["}"] = { "注释下面所有行与当前行" },
					A = { "在行尾添加注释" },
					b = { "注释上一个词(光标前)" },
					e = { "注释下一个词(含有光标)" },
					f = { "在光标前添加注释" },
					F = { "在光标前添加注释" },
					G = { "注释下面所有行与当前行" },
					h = { "注释左n个字(光标前)" },
					j = { "注释下面一行和当前行" },
					k = { "注释上面一行和当前行" },
					l = { "注释右n个字(含光标)" },
					o = { "在下方插入一行注释" },
					O = { "在上方插入一行注释" },
					T = { "在光标前添加注释" },
					t = { "在光标前添加注释" },
					w = { "注释词语" },
					["["] = { "注释上面所有行与当前行" },
					["]"] = { "注释下面所有行与当前行" },
				},
				b = {
					name = "注释(块)",
					c = { "注释当前行" },
				},
			},
		}, { mode = "n" })



		wk.register({
			g = {
				c = { "注释当前行" },
				b = { "注释当前块" },
			},
		}, { mode = "v" })

		wk.register({
			["<leader>"] = {
				m = {
					name = "格式化",
					p = { "格式化选中区域" },
				},
			},
		}, { mode = "v" })
	end,
}
