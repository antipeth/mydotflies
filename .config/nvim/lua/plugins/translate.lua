-- find 查找
-- search 搜索
-- toggle 切换

return {
    "folke/which-key.nvim",
	event = "VeryLazy", -- 在 VeryLazy 事件触发时加载插件
	config = function()
		local wk = require("which-key")
        -- systemctl 
        wk.register({
            c = {
                name = "复制",
				["$"] = { "从光标到行尾" },
				["%"] = { "从光标到前面的匹配括号" },
				["0"] = { "从光标到行首" },
				["^"] = { "从光标到行首字母" },
				["{"] = { "从上一行到上一空行" },
				["}"] = { "从当前行到下一空行" },
				b = { "前一个词(光标前)" },
				e = { "后一个词(含有光标)" },
				G = { "从当前行到最后一行" },
				h = { "向左n个字(光标前)" },
				j = { "向下n行到当前行" },
				k = { "向上n行到当前行" },
				l = { "向右n个字(含光标)" },
                n = { "下一个搜索结果" },
                N = { "上一个搜索结果" },
				s = { "跃进到" },
                S = { "跳出到" },
				w = { "下一个词" },
				["["] = { "从当前行到上一个{" },
				["]"] = { "从当前行到下一个}" },
				a = { "环绕" },
			},
        

        d = {
            ["$"] = { "从光标到行尾" },
            ["%"] = { "从光标到前面的匹配括号" },
            ["0"] = { "从光标到行首" },
            ["^"] = { "从光标到行首字母" },
            ["{"] = { "从上一行到上一空行" },
            ["}"] = { "从当前行到下一空行" },
            b = { "前一个词(光标前)" },
            e = { "后一个词(含有光标)" },
            G = { "从当前行到最后一行" },
            h = { "向左n个字(光标前)" },
            j = { "向下n行到当前行" },
            k = { "向上n行到当前行" },
            l = { "向右n个字(含光标)" },
            n = { "下一个搜索结果" },
            N = { "上一个搜索结果" },
            s = { "跃进到" },
            S = { "跳出到" },
            w = { "下一个词" },
            ["["] = { "从当前行到上一个{" },
            ["]"] = { "从当前行到下一个}" },
            a = { "环绕" },
        },
        -- g system
        g = {
            ["%"] = { "从光标到前面的匹配括号" },
            ["["] = { "移到左环绕" },
            ["]"] = { "移到右环绕" },
            e = { "移到上一个词尾" },
            f = { "打开光标下的文件" },
            g = { "移到第一行" },
            i = { "回到上次插入模式的位置并进入插入模式" },
            N = { "下一个匹配项并进入选择模式(先查找)" },
            n = { "上一个匹配项并进入选择模式(先查找)" },
            r = { "替换当前行变为当前剪切板内容" },
            T = { "上一个标签页" },
            t = { "下一个标签页" },
            v = { "选择上一次选中内容并进入选择模式" },
            x = { "用系统应用打开光标下的文件" },
            ["~"] = { "切换大小写" },

        },
  -- y system
        -- y = {
        --     ["$"] = { "从光标到行尾" },
        --     ["%"] = { "从光标到前面的匹配括号" },
        --     ["0"] = { "从光标到行首" },
        --     ["^"] = { "从光标到行首字母" },
        --     ["{"] = { "从上一行到上一空行" },
        --     ["}"] = { "从当前行到下一空行" },
        --     b = { "前一个词(光标前)" },
        --     e = { "后一个词(含有光标)" },
        --     -- F = { "(不推荐)" },
        --     -- f = { "(不推荐)" },
        --     G = { "从当前行到最后一行" },
        --     h = { "向左n个字(光标前)" },
        --     j = { "向下n行到当前行" },
        --     k = { "向上n行到当前行" },
        --     l = { "向右n个字(含光标)" },
        --     S = { "选中当前行，上下同时输入" },
        --     s = { "选中当前行，左右同时输入" },
        --     -- t = { "(不推荐)" },
        --     -- T = { "(不推荐)" },
        --     w = { "下一个词" },
        --     ["["] = { "从当前行到上一个{" },
        --     ["]"] = { "从当前行到下一个}" },
        --     a = { "环绕" },
        -- },
        -- z system
        z = {
          ["<CR>"] = { "当前行转到窗口顶(第一个非空列)" },
          a = { "折叠或展开当前折叠(强)" },
          A = { "折叠或展开当前折叠及其所有嵌套的折叠" },
          b = { "当前行转到窗口底" },
          C = { "折叠当前折叠及其所有嵌套的折叠" },
          c = { "折叠当前折叠" },
          e = { "当前列转到窗口右" },
          g = { "标记当前行作为拼写建议的好单词" },
          H = { "窗口左半部分移到窗口左" },
          i = { "折叠或展开当前折叠(弱)" },
          L = { "窗口左半部分移到窗口右" },
          m = { "折叠更多的折叠" },
          M = { "折叠所有折叠" },
          o = { "展开当前折叠" },
          O = { "展开当前折叠" },
          r = { "打开更少折叠" },
          R = { "打开所有折叠" },
          s = { "当前列转到窗口左" },
          t = { "当前行转到窗口顶" },
          -- v = { "" },
          w = { "标记当前行作为拼写建议的坏单词" },
          x = { "取消最后一次的折叠操作" },
          z = { "当前行转到窗口中间" },
          f = { "创建n行折叠" },
        },        
    }, { mode = "n" })

    wk.register({
        g = {
            c = {
                name = "注释(行)",
                c = { "注释当前行" },
                ["$"] = { "注释到行尾" },
                ["%"] = { "注释到匹配括号" },
                [","] = { "在光标前插入注释" },
                ["0"] = { "从行首注释注释到光标前" },
                ["^"] = { "从首字母注释注释到光标前" },
                ["{"] = { "注释上面所有行" },
                ["}"] = { "注释下面所有行与当前行" },
                A = { "在行尾添加注释" },
                b = { "注释上一个词(光标前)" },
                e = { "注释下一个词(含有光标)" },
                f = { "在光标前添加注释" },
                F = { "在光标前添加注释" },
                G = { "注释下面所有行与当前行" },
                h = { "注释左n个字(光标前)" },
                j = { "注释下面一行和当前行" },
                k = { "注释上面一行和当前行" },
                l = { "注释右n个字(含光标)" },
                o = { "在下方插入一行注释" },
                O = { "在上方插入一行注释" },
                T = { "在光标前添加注释" },
                t = { "在光标前添加注释" },
                w = { "注释词语" },
                ["["] = { "注释上面所有行与当前行" },
                ["]"] = { "注释下面所有行与当前行" },
            },
            b = {
                name = "注释(块)",
                c = { "注释当前行" },
            },
        },
    }, { mode = "n" })
        -- General
        wk.register({
            ["["] = {
                b = { "上一个缓冲区" },
                q = { "上一个快速修复" },
                d = { "上一个诊断" },
                e = { "上一个错误" },
                w = { "上一个警告" },
            },

            ["]"] = {
                b = { "下一个缓冲区" },
                q = { "下一个快速修复" },
                d = { "下一个诊断" },
                e = { "下一个错误" },
                w = { "下一个警告" },
            },

            [","] = { "切换缓冲区" },

            ["-"] = { "在下方分割窗口" },

            ["|"] = { "在右侧分割窗口" },

            -- ["<Tab>"] = { 
            --     name = "标签页",
            --     l = { "上一个标签页" },
            --     f = { "第一个标签页" },
            --     ["<Tab>"] = { "新建标签页" },
            --     ["]"] = { "下一个标签页" },
            --     ["["] = { "上一个标签页" },
            --     d = { "关闭标签页" },
            -- },
        

            ["<leader>"] = {

                ["<Tab>"] = {
                    name = "标签页",
                    l = { "上一个标签页" },
                    f = { "第一个标签页" },
                    ["<Tab>"] = { "新建标签页" },
                    ["]"] = { "下一个标签页" },
                    ["["] = { "上一个标签页" },
                    d = { "关闭标签页" },                   
                },

                b = { 
                    name = "缓冲区", 
                    b = { "切换到另一个缓冲区" },
                },

                c = {
                    name = "代码",
                    f = { "格式化" },
                    d = { "行诊断" },
                },

                f = {
                    name = "文件/查找",
                    n = { "新建文件" },
                    t = { "终端(根目录)" },
                    T = { "终端(当前工作目录)" },
                },

                g = {
                    name = "Git",
                    g = { "Lazygit(根目录)" },
                    G = { "Lazygit(当前工作目录)" },
                },

                K = { "关键词程序" },

                ["`"] = { "切换到另一个缓冲区" },

                L = { "LazyVim 更新日志" },

                l = { "打开LAZY插件管理器" },

                q = {
                    name = "退出/会话",
                },

                u = {
                    name = "用户界面",
                    r = { "重绘 / 清除搜索 / 差异更新" },
                    f = { "切换自动格式化(全局)" }, 
                    F = { "切换自动格式化(缓冲区)" },   
                    s = { "切换拼写检查" },    
                    w = { "切换自动换行" },  
                    L = { "切换相对行号" },
                    l = { "切换行号" },
                    d = { "切换诊断" },
                    c = { "切换隐藏" },
                    h = { "切换内联提示" },
                    T = { "切换 Treesitter 高亮" },
                    b = { "切换背景" },    
                    i = { "检查位置" },                
                },

                w = {
                    name = "窗口",
                    w = { "其他窗口" },
                    d = { "删除窗口" },
                    ["-"] = { "在下方分割窗口" },
                    ["|"] = { "在右侧分割窗口" },
                },

                x = {
                    name = "诊断/快速修复",
                    l = { "位置列表" },
                    q = { "快速修复列表" },
                },
            },

            -- ["<C-h>"] = "到左窗口 n t",
            -- ["<C-j>"] = "到下窗口 n t",
            -- ["<C-k>"] = "到上窗口 n t",
            -- ["<C-l>"] = "到右窗口 n t",
            -- ["<C-Up>"] = "增加窗口高度 n",
            -- ["<C-Down>"] = "减少窗口高度 n",
            -- ["<C-Left>"] = "减少窗口宽度 n",
            -- ["<C-Right>"] = "增加窗口宽度 n",
            -- ["<A-j>"] = "下移 n i v",
            -- ["<A-k>"] = "上移 n i v",
            -- ["<S-h>"] = "上一个缓冲区 n",
            -- ["<S-l>"] = "下一个缓冲区 n",
            -- ["<esc>"] = "退出并清除搜索高亮 i n",
            -- ["n"] = "下一个搜索结果 n x o",
            -- ["N"] = "上一个搜索结果 n x o",
            -- ["<C-s>"] = "保存文件 i x n s",
            -- ["<c-/>"] = "终端 (根目录) n",
            -- ["<c-_>"] = "which_key_ignore n t",
            -- ["<esc><esc>"] = "进入正常模式 t",
            -- ["<C-/>"] = "隐藏终端 t",           
        }, { mode = "n" })

        -- LSP
        wk.register({
            ["<leader>"] = {
                c ={
                    name = "代码",
                    l = { "LSP 信息" },
                    a = { "代码操作" },
                    A = { "源操作" },
                    r = { "重命名" },
                },
            },

            g = {
                d = { "转到定义" },
                r = { "引用" },
                D = { "转到声明" },
                I = { "转到实现" },
                y = { "转到类型定义" },
                K = { "签名帮助" },             
            },

            -- K = { "悬停" },
            -- ["<c-k>"] = "签名帮助 i",
        }, { mode = "n" })

        -- bufferline.nvim
        wk.register({
            ["<leader>"] = {
                b = {
                    name = "缓冲区",
                    l = { "删除左侧的缓冲区" },
                    o = { "删除其他缓冲区" },
                    p = { "切换固定状态" },
                    P = { "删除非固定缓冲区" },
                    r = { "删除右侧的缓冲区" },

                },
            },

            --["<S-h>"] = "上一个缓冲区 n",
            --["<S-l>"] = "下一个缓冲区 n",
        }, { mode = "n" })

        -- conform.nvim
        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
                    F = { "格式化注入的语言" },
                },
            },
        }, { mode = "n" })

        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
                    F = { "格式化注入的语言" },
                },
            },
        }, { mode = "v" })

        -- flash.nvim
        -- ["<c-s>"] = "切换闪烁搜索 c",
        -- ["r"] = "远程闪烁 o",
        -- ["R"] = "树状搜索 o, x",
        -- ["s"] = "闪烁 n, o, x",
        -- ["S"] = "树状闪烁 n, o, x",

        -- mason.nvim
        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
                    m = { "打开 Mason " },
                 },
            },
        }, { mode = "n" })

        -- mini.bufremove
        wk.register({
            ["<leader>"] = {
                b = {
                    name = "缓冲区",
                    d = { "删除缓冲区" },
                    D = { "删除缓冲区(强制)" },
                },
            },
        }, { mode = "n" })

        -- mini.pairs
        wk.register({
            ["<leader>"] = {
                u = {
                    name = "用户界面",
                    p = { "切换自动配对括号" },
                },
            },
        }, { mode = "n" })

        -- mini.surround
        wk.register({
            g = {
                s = {
                    name = "环绕",
                    a = { "添加环绕" },
                    d = { "删除环绕" },
                    f = { "查找右环绕" },
                    F = { "查找左环绕" },
                    h = { "高亮环绕" },
                    n = { "更新 MiniSurround.config.n_lines" },
                    r = { "替换环绕" },
                },
            },
        }, { mode = "n" })

        wk.register({
            g = {
                s = {
                    name = "环绕",
                    a = { "添加环绕" },
                },
            },
        }, { mode = "v" })

        -- neo-tree.nvim
        wk.register({
            ["<leader>"] = {
                b = {
                    name = "缓冲区",
                    e = { "缓冲区浏览器" },                   
                },

                e = { "文件浏览器 NeoTree (根目录)" },

                E = { "文件浏览器 NeoTree (当前工作目录)" },
                
                f ={
                    name = "文件/查找",
                    e = { "文件浏览器 NeoTree (根目录)" },
                    E = { "文件浏览器 NeoTree (当前工作目录)" },                   
                },

                g = {
                    name = "Git",
                    e = { "Git 浏览器" },
                },
            },
        }, { mode = "n" })

        -- noice.nvim
        wk.register({
            ["<leader>"] = {
                s = {
                    name = "搜索",
                    n = { 
                        name = "通知",
                        a = { "通知所有" },
                        d = { "取消所有通知" },
                        h = { "通知历史记录" },
                        l = { "通知最后一条消息" },
                     },
                },
            },

            -- ["<c-b>"] = "向后滚动 n, i, s",
            -- ["<c-f>"] = "向前滚动 n, i, s",
            -- ["<S-Enter>"] = "重定向命令行 c",
        }, { mode = "n" })

        -- nvim-notify
        wk.register({
            ["<leader>"] = {
                u = {
                    name = "用户界面",
                    n = { "取消所有通知" },
                },
            },
        }, { mode = "n" })

        -- nvim-spectre
        wk.register({
            ["<leader>"] = {
                s = {
                    name = "搜索",
                    r = { "在文件中替换(Spectre)" },
                },
            },     
        }, { mode = "n" })

        -- nvim-treesitter
        -- ["<bs>"] = "减少选择 x",
        -- ["<c-space>"] = "增加选择 n",

        -- nvim-treesitter-context
        wk.register({
            ["<leader>"] = {
                u = {
                    name = "用户界面",
                    t = { "切换 Treesitter 上下文" },
                },
            },
        }, { mode = "n" })

        -- persistence.nvim
        wk.register({
            ["<leader>"] = {
                q = {
                    name = "退出",
                    d = { "恢复上次会话" },
                    l = { "恢复会话" },
                },
            },
        }, { mode = "n" })

        -- telescope.nvim
        wk.register({
            ["<leader>"] = {
                ["<space>"] = { "查找文件(根目录)" },

                [","] = { "切换缓冲区" },

                ["/"] = { "Grep (根目录)" },

                [":"] = { "命令历史记录" },

                f = {
                    name = "文件/查找",
                    b = { "缓冲区" },
                    c = { "查找配置文件" },
                    f = { "查找文件 (根目录)" },
                    F = { "查找文件 (当前工作目录)" },
                    g = { "查找文件 (git 文件)" },
                    r = { "最近文件" },
                    R = { "最近文件 (当前工作目录)" },                    
                },

                g = {
                    name = "Git",
                    c = { "提交" },
                    s = { "状态" },
                },

                s = {
                    name = "搜索",
                    ["\""] = { "寄存器" },
                    a = { "自动命令" },
                    b = { "缓冲区" },
                    c = { "命令历史记录" },
                    C = { "命令" },
                    d = { "文档诊断" },
                    D = { "工作区诊断" },            
                    g = { "Grep (根目录)" },
                    G = { "Grep (当前工作目录)" },
                    h = { "帮助页面" },      
                    H = { "搜索高亮组" },  
                    k = { "键映射" },
                    m = { "跳转到标记" },
                    M = { "手册页" },
                    o = { "选项" },
                    R = { "恢复" },
                    s = { "转到符号" },
                    S = { "转到符号 (工作区)" },
                    w = { "单词 (根目录)" },
                    W = { "单词 (当前工作目录)" },
                },

                u = {
                    name = "用户界面",
                    C = { "带预览的颜色方案" },
                },
            },
        }, { mode = "n" })

        wk.register({
            ["<leader>"] = {
                s = {
                    name = "搜索",
                    w = { "选择 (根目录)" },
                    W = { "选择 (当前工作目录)" },
                },
            },
        }, { mode = "v" })

        -- todo-comments.nvim
        wk.register({
            ["<leader>"] = {
                s = {
                    name = "搜索",
                    t = { "待办事项" },
                    T = { "待办事项/修复/修复我" },
                },

                x = {
                    name = "诊断/快速修复",
                    t = { "待办事项 (Trouble)" },
                    T = { "待办事项/修复/修复我 (Trouble)" },
                },
            },

            ["["] = {
                t = { "上一个待办事项注释" },
            },

            ["]"] = {
                t = { "下一个待办事项注释" },
            },
        }, { mode = "n" })

        -- trouble.nvim
        wk.register({
            ["<leader>"] = {
                x = {
                    name = "诊断/快速修复",
                    L = { "位置列表 (Trouble)" },
                    Q = { "快速修复列表 (Trouble)" },
                    x = { "文档诊断 (Trouble)" },
                    X = { "工作区诊断 (Trouble)" },
                },
            },

            ["["] = {
                q = { "上一个Trouble/快速修复项目" },
            },

            ["]"] = {
                q = { "下一个Trouble/快速修复项目" },
            },
        }, { mode = "n" })

        -- vim-illuminate
        wk.register({
            ["["] = {
                ["["] = { "上一个引用" },
            },

            ["]"] = {
                ["]"] = { "下一个引用" },
            },
        }, { mode = "n" })

        -- yanky.nvim
        -- Part of lazyvim.plugins.extras.coding.yanky
        wk.register({
            ["<leader>"] = {
                p = { "打开复制历史记录" },

            },

            ["<"] ={
                p = { "粘贴并向左缩进" },
                P = { "粘贴并在之前向左缩进" },
            },

            ["="] ={
                p = { "应用过滤器后粘贴" },
                P = { "应用过滤器前粘贴" },
            },

            [">"] ={
                p = { "粘贴并向右缩进" },
                P = { "粘贴并在之前向右缩进" },
            },

            ["["] ={
                p = { "在光标之前缩进的粘贴(整行)" },
                P = { "在光标之前缩进的粘贴(整行)" },
                y = { "向前循环浏览复制历史记录" },
            },

            ["]"] ={
                p = { "在光标之后缩进的粘贴(整行)" },
                P = { "在光标之后缩进的粘贴(整行)" },
                y = { "向后循环浏览复制历史记录" },
            },

            g = {
                p = { "在选择后粘贴复制的文本" },
                P = { "在选择前粘贴复制的文本" },
            },

            -- ["p"] = "在光标之后粘贴复制的文本 n",
            -- ["P"] = "在光标之前粘贴复制的文本 n",
            -- ["y"] = "复制文本 n",
        }, { mode = "n" })

        -- nvim-dap nvim-dap-ui
        -- Part of lazyvim.plugins.extras.dap.core
        wk.register({
            ["<leader>"] = {
                d = {
                    name = "调试",
                    a = { "带参数运行" },
                    b = { "切换断点" },
                    B = { "断点条件" },
                    c = { "继续" },
                    C = { "运行到光标处" },
                    e = { "评估" },
                    g = { "转到行(不执行)" },
                    i = { "单步调试Step Into" },
                    j = { "向下" },
                    k = { "向上" },
                    l = { "运行上次" },
                    o = { "单步调试Step Out" },
                    O = { "单步调试Step Over " },
                    p = { "暂停" },
                    -- r = { "切换 REPL/运行" },
                    s = { "会话" },
                    t = { "终止" },
                    u = { "调试部件" },
                    w = { "小部件" },

                },
            },
        }, { mode = "n" })

        -- aerial.nvim
        -- Part of lazyvim.plugins.extras.editor.aerial
        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
                    s = { "Aerial (Symbols)" },
                },

                s = {
                    name = "搜索",
                    s = { "转到Symbol (Aerial)" },
                },
            },
        }, { mode = "n" })

        -- leap.nvim flit.nvim 
        -- Part of lazyvim.plugins.extras.editor.leap
        wk.register({
            g = {
                s = { "从窗口跳转" },
            }
        }, { mode = "n" })
        -- ["f"] = "f n, o, x",
        -- ["F"] = "F n, o, x",
        -- ["t"] = "t n, o, x",
        -- ["T"] = "T n, o, x",    
        -- ["s"] = "向前跳转至 n, o, x",
        -- ["S"] = "向后跳转至 n, o, x",  
        
        -- markdown-preview.nvim
        -- Part of lazyvim.plugins.extras.lang.markdown
        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
                    p = { "预览" },
                }
            }
        }, { mode = "n" })

        wk.register({
            ["<leader>"] = {
                c = {
                    name = "代码",
					j = { "<cmd>split term://javac %:r.java && java %:r<CR>:startinsert<CR>", "快捷运行Java文件" },
                }
            }
        }, { mode = "n" })
    end,	
}
